{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","OtherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","fetchTeam","a","fetch","response","json","data","title","value","totalMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b80e9967.chunk.js","sourcesContent":["import { React } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport './MatchDetailCard.scss'\n\n\nexport const MatchDetailCard = ({ teamName, match }) => {\n  if (!match) return null;\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n  const OtherTeamRoute = `/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n  return (\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'} >\n      <div>\n        <span className=\"vs\">vs</span>\n        <h1><Link to={OtherTeamRoute}>{otherTeam}</Link></h1>\n        <h2 className=\"match-date\">{match.date}</h2>\n        <h3 className=\"match-venue\">at {match.venue}</h3>\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3></div>\n      <div className=\"additional-detail\">\n        <h3>First Innings</h3>\n        <p>{match.team1}</p>\n        <h3>Second Innings</h3>\n        <p>{match.team2}</p>\n        <h3>Man of the Match</h3>\n        <p>{match.playerOfMatch}</p>\n        <h3>Umpires</h3>\n        <p>{match.umpire1}, {match.umpire2}</p>\n\n      </div>\n\n    </div>\n  );\n}\n\n\n","import { React }  from 'react'\nimport { Link } from 'react-router-dom';\n\nimport './MatchSmallCard.scss'\n\nexport const MatchSmallCard = ({teamName, match}) => {\n    if(!match) return null;\n    const otherTeam = match.team1 === teamName ? match.team2:match.team1;\n    const OtherTeamRoute = `/teams/${otherTeam}`;\n    const isMatchWon = teamName === match.matchWinner;\n  return (\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\n       <div>\n        <span className=\"vs\">vs</span>\n        <h1>\n        <Link to={OtherTeamRoute}>{otherTeam}</Link></h1>\n        \n        <p className = \"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n        </div>\n    </div>\n  );\n}\n\n\n","import { React, useEffect, useState } from 'react'\nimport { Link, useParams } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\nimport './TeamPage.scss';\n\nexport const TeamPage = () => {\n\n  const [team, setTeam] = useState({ matches: [] });\n  const { teamName } = useParams();\n\n\n  useEffect(\n    () => {\n      const fetchTeam = async () => {\n        const response = await fetch(`/team/${teamName}`);\n        const data = await response.json();\n        setTeam(data)\n      }\n      fetchTeam();\n    }, [teamName]\n\n\n  );\n\n\n  if (!team || !team.teamName) {\n    return <h1>Team Not Found</h1>\n  }\n  return (\n    <div className=\"TeamPage\">\n      <div className=\"team-name-section\">\n        <h1 className=\"team-name\">{team.teamName}</h1>\n      </div>\n      <div className=\"win-loss-section\">\n        \n        Wins / Losses\n        <PieChart\n          data={[\n            {title:'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d'},\n            {title:'Wins', value:team.totalWins, color:'#4da375'}\n          ]}\n        />\n        \n        </div>\n\n      <div className=\"match-detail-section\">\n        <h3>Latest Matches</h3>\n        <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\n      </div>\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\n\n      <div className=\"more-link\">\n      <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More &gt;</Link>\n      \n      </div>\n\n\n    </div>\n  );\n}\n\n\n","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './YearSelector.scss'\n\nexport const YearSelector = ({teamName}) => {\n\n    let years = [];\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n    for(let i = startYear; i<= endYear;i++){\n        years.push(i);\n    }\n    return (\n        <ol className=\"YearSelector\">\n        {years.map(year => (\n        <li key={year}>\n            <Link   to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\n            </li>))}\n        </ol>\n    )\n}\n  ","import { React, useEffect, useState }  from 'react'\nimport { useParams } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { YearSelector } from '../components/YearSelector';\n\nimport './MatchPage.scss'\n\n\nexport const MatchPage = () => {\n\n    const[matches, setMatches] = useState([]);\n    const {teamName, year} = useParams();\n\n    useEffect(\n        () => {\n            const fetchMatches = async () => {\n                const response  = await fetch(`/team/${teamName}/matches?year=${year}`);\n                const data  = await response.json();\n                setMatches(data)\n            }\n            fetchMatches();\n        }, [teamName, year]\n        \n\n    );\n\n\n\n\n  return (\n    <div className=\"MatchPage\">\n      <div className=\"year-selector\">\n        <h3>Select Year</h3>\n        <YearSelector teamName={teamName}/>\n      </div>\n      <div>\n      <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n      {matches.map(match => <MatchDetailCard key={match.id} teamName = {teamName} match = {match}/>)}\n      </div>\n    </div>\n  );\n}\n\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nimport './TeamTile.scss';\n\n\nexport const TeamTile = ({ teamName}) => {\n\n    return (\n        <div className=\"TeamTile\">\n            <h1>\n            <Link to={`/teams/${teamName}`} >{teamName}</Link>\n            </h1>\n        </div>\n    )\n}","import { React, useEffect, useState } from 'react'\n\nimport { TeamTile } from '../components/TeamTile';\n\n\nimport './HomePage.scss';\n\nexport const HomePage = () => {\n\n    const [teams, setTeams] = useState([]);\n\n    useEffect(\n        () => {\n            const fetchAllTeams = async () => {\n                const response = await fetch(`/team`);\n                const data = await response.json();\n                setTeams(data)\n            }\n            fetchAllTeams();\n        }, []\n\n\n    );\n\n\n\n    return (\n        <div className=\"HomePage\">\n            <div className=\"header-section\">\n                <h1 className=\"app-name\">IPL Dashboard</h1>\n            </div>\n            <div className=\"team-grid\">\n                {teams.map(team => <TeamTile key={team.id} teamName= { team.teamName } />)}\n\n            </div>\n        </div>\n    );\n}\n\n\n","import './App.scss';\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n        <Route path=\"/\" element={<HomePage/>}/>\n        <Route path=\"/teams/:teamName\" element={<TeamPage/>}/>\n        <Route path=\"/teams/:teamName/matches/:year\" element={<MatchPage/>}/>\n       </Routes>\n      </Router>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}